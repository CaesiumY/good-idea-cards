{"version":3,"sources":["container/AppLayout.js","api.js","components/Posts.js","routes/Home.js","components/AlertMessage.js","routes/Draft.js","routes/Search.js","routes/Admin.js","components/SideNav.js","App.js","index.js"],"names":["Content","Footer","Header","AppLayout","state","collapsed","toggle","setState","style","minHeight","backgroundColor","margin","padding","background","this","props","children","textAlign","target","rel","href","Component","axios","defaults","baseURL","getAllPosts","get","createPosts","payload","post","getAllDrafts","createDrafts","deleteDrafts","delete","String","getSearchData","search_query","params","PostCard","styled","Posts","id","author","content","title","bordered","type","Home","isLoading","isReloading","results","openNotificationWithIcon","message","notification","getData","a","async","api","then","response","data","catch","e","reloadData","tip","description","map","item","key","block","position","top","icon","loading","onClick","AlertMessage","isSuccess","isError","errorMessage","onClose","showIcon","closable","TextArea","SubmitButton","Draft","printSuccess","enterLoading","console","log","exitLoading","handleSubmit","preventDefault","form","validateFields","err","values","pushData","resetFields","error","getFieldDecorator","onSubmit","className","Item","rules","required","prefix","color","placeholder","allowClear","autoSize","minRows","maxRows","htmlType","WrappedDraftForm","create","name","Search","SearchContainer","value","handleSearch","onSearch","enterButton","size","length","marginTop","Column","Admin","selectedRowKeys","alert","onSelectChange","confirmDeleteOneItem","index","confirmDeleteMultipleItems","indexes","forEach","confirmAddOneItem","created_at","confirmAddMultipleItems","result","rowSelection","onChange","hasSelected","marginBottom","onConfirm","bind","okText","cancelText","placement","disabled","marginLeft","dataSource","rowKey","dataIndex","render","text","record","visibility","MenuLink","Link","MenuAnchor","SideNav","isOpenMenu","closeMenu","isOpen","event","onStateChange","handleStateChange","to","GlobalStyle","createGlobalStyle","App","path","exact","component","ReactDOM","document","getElementById"],"mappings":"uTAMQA,G,kBAAAA,SAASC,E,IAAAA,OAAQC,E,IAAAA,OAEJC,E,2MACnBC,MAAQ,CACNC,WAAW,G,EAGbC,OAAS,WACP,EAAKC,SAAS,CACZF,WAAY,EAAKD,MAAMC,a,wEAKzB,OACE,uBAAQG,MAAO,CAAEC,UAAW,UAC1B,kBAACP,EAAD,CAAQM,MAAO,CAAEE,gBAAiB,aAClC,kBAACV,EAAD,CACEQ,MAAO,CACLG,OAAQ,YACRC,QAAS,GACTC,WAAY,OACZJ,UAAW,MAGZK,KAAKC,MAAMC,UAEd,kBAACf,EAAD,CAAQO,MAAO,CAAES,UAAW,WAC1B,uBACEC,OAAO,SACPC,IAAI,sBACJC,KAAK,+CAHP,sD,GA1B6BC,a,uHCNvCC,IAAMC,SAASC,QAAU,4BAEV,OACbC,YADa,WAEX,OAAOH,IAAMI,IAAI,YAGnBC,YALa,SAKDC,GACV,OAAON,IAAMO,KAAK,UAAWD,IAG/BE,aATa,WAUX,OAAOR,IAAMI,IAAI,aAGnBK,aAba,SAaAH,GACX,OAAON,IAAMO,KAAK,WAAYD,IAGhCI,aAjBa,SAiBAJ,GACX,OAAON,IAAMW,OAAO,WAAaC,OAAON,KAG1CO,cArBa,SAqBCP,GACZ,IAAMQ,EAAeR,EACrB,OAAON,IAAMI,IAAI,WAAY,CAC3BW,OAAQ,CACND,oB,0KCzBR,IAAME,EAAWC,YAAO,IAAPA,CAAH,KAKOC,E,iLACT,IAAD,EACyB1B,KAAKC,MAA7B0B,EADD,EACCA,GAAIC,EADL,EACKA,OAAQC,EADb,EACaA,QACpB,OACE,6BACE,kBAACL,EAAD,CAAUM,MAAK,UAAKH,EAAL,uBAAeI,UAAU,GACtC,4BACE,uBAAMC,KAAK,gBACVJ,GAEH,2BAAIC,S,GAVqBtB,aCHd0B,E,2MACnB3C,MAAQ,CACN4C,WAAW,EACXC,aAAa,EACbC,QAAS,I,EAGXC,yBAA2B,SAACL,EAAMM,GAChCC,EAAA,EAAaP,GAAM,CACjBM,QAAQ,GAAD,OAAKA,M,EAIhBE,QAAU,oBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACFE,EACHhC,cACAiC,MAAK,SAAAC,GACJ,EAAKpD,SAAS,CACZ2C,QAASS,EAASC,KAClBZ,WAAW,EACXC,aAAa,OAGhBY,OAAM,SAAAC,GACL,EAAKX,yBAAyB,QAASW,OAXnC,sC,EAeVC,WAAa,WACX,EAAKxD,SAAS,CAAE0C,aAAa,IAC7B,EAAKK,W,mFAILxC,KAAKwC,Y,6CAILxC,KAAKP,SAAS,CAAE2C,QAAS,O,+BAGjB,IAAD,EACqCpC,KAAKV,MAAzC8C,EADD,EACCA,QAASF,EADV,EACUA,UAAWC,EADrB,EACqBA,YAE5B,OACE,oCACGD,EACC,uBAAMgB,IAAI,cACR,uBACEZ,QAAQ,2DACRa,YAAY,iIACZnB,KAAK,SAEP,6BACA,6BAGF,6BACGI,EAAQgB,KAAI,SAAAC,GAAI,OACf,kBAAC,EAAD,CACE1B,GAAI0B,EAAK1B,GACTC,OAAQyB,EAAKzB,OACbC,QAASwB,EAAKxB,QACdyB,IAAKD,EAAK1B,QAGd,uBACEK,KAAK,UACLuB,OAAK,EACL7D,MAAO,CAAE8D,SAAU,WAAYC,IAAK,SACpCC,KAAK,SACLC,QAASxB,EACTyB,QAAS5D,KAAKiD,YANhB,+C,GAlEsB1C,a,kCCFnB,SAASsD,EAAT,GAKX,IAJFC,EAIC,EAJDA,UACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,aACAC,EACC,EADDA,QAEA,OACE,oCACGH,GACC,uBACExB,QAAQ,6BACRa,YAAY,mEACZnB,KAAK,UACLkC,UAAQ,EACRC,UAAQ,EACRF,QAASA,IAGZF,GACC,uBACEzB,QAAQ,6BACRa,YAAaa,EACbhC,KAAK,QACLkC,UAAQ,EACRC,UAAQ,EACRF,QAASA,K,+TCvBXG,E,IAAAA,SAEFC,EAAe5C,YAAO,IAAPA,CAAH,KASZ6C,E,2MACJhF,MAAQ,CACNsC,OAAQ,GACRC,QAAS,GACTK,WAAW,EACX4B,WAAW,EACXC,SAAS,EACTC,aAAc,I,EAGhBC,QAAU,SAAAjB,GACR,EAAKvD,SAAS,CAAEqE,WAAW,EAAOC,SAAS,K,EAsB7CQ,aAAe,WACb,EAAK9E,SAAS,CAAEqE,WAAW,K,EAG7BU,aAAe,WACbC,QAAQC,IAAI,WACZ,EAAKjF,SAAS,CAAEyC,WAAW,K,EAG7ByC,YAAc,WACZF,QAAQC,IAAI,UACZ,EAAKjF,SAAS,CAAEyC,WAAW,K,EAG7B0C,aAAe,SAAA5B,GACbA,EAAE6B,iBAEF,EAAK5E,MAAM6E,KAAKC,gBAAe,SAAOC,EAAKC,GAAZ,SAAAxC,EAAAC,OAAA,mDACxBsC,EADwB,kCAAAvC,EAAA,MAErB,EAAKhD,SAAS,CAAEmC,OAAQqD,EAAOrD,OAAQC,QAASoD,EAAOpD,WAFlC,yBAAAY,EAAA,MAGrB,EAAKyC,YAHgB,OAI3B,EAAKjF,MAAM6E,KAAKK,cAJW,yC,0EApCrB,IAAD,OACTnF,KAAKwE,eACL7B,EACG1B,aAAa,CACZW,OAAQ5B,KAAKV,MAAMsC,OACnBC,QAAS7B,KAAKV,MAAMuC,UAErBe,MAAK,SAAAC,GACJ4B,QAAQC,IAAI7B,GACZ,EAAK8B,cACL,EAAKJ,kBAENxB,OAAM,SAAAqC,GACLX,QAAQC,IAAIU,GACZ,EAAK3F,SAAS,CAAEsE,SAAS,EAAMC,aAAcoB,EAAM9C,UACnD,EAAKqC,mB,+BA8BD,IACAU,EAAsBrF,KAAKC,MAAM6E,KAAjCO,kBADD,EAEiDrF,KAAKV,MAArD4C,EAFD,EAECA,UAAW4B,EAFZ,EAEYA,UAAWC,EAFvB,EAEuBA,QAASC,EAFhC,EAEgCA,aACvC,OACE,oCACE,uBAAMsB,SAAUtF,KAAK4E,aAAcW,UAAU,cAC3C,sBAAMC,KAAN,KACGH,EAAkB,SAAU,CAC3BI,MAAO,CAAC,CAAEC,UAAU,EAAMpD,QAAS,sEADpC+C,CAGC,uBACEM,OACE,uBAAM3D,KAAK,OAAOtC,MAAO,CAAEkG,MAAO,qBAEpCC,YAAY,+EACZC,YAAU,MAIhB,sBAAMN,KAAN,KACGH,EAAkB,UAAW,CAC5BI,MAAO,CAAC,CAAEC,UAAU,EAAMpD,QAAS,sEADpC+C,CAGC,kBAACjB,EAAD,CACEyB,YAAY,qDACZE,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjCH,YAAU,MAIhB,sBAAMN,KAAN,KACE,kBAACnB,EAAD,CACE6B,SAAS,SACTX,UAAU,oBACVhC,OAAK,EACLI,QAASzB,EACTF,KAAK,WALP,8BAYJ,kBAAC6B,EAAD,CACEC,UAAWA,EACXC,QAASA,EACTC,aAAcA,EACdC,QAASjE,KAAKiE,e,GA1GJ1D,aAkHL4F,EAFU,IAAKC,OAAO,CAAEC,KAAM,SAApB,CAA+B/B,GC5HhDgC,E,IAAAA,OAEaC,E,2MACnBjH,MAAQ,CACN4C,WAAW,EACXE,QAAS,I,EAGXI,QAAU,SAAMgE,GAAN,eAAA/D,EAAAC,OAAA,kEAAAD,EAAA,MACWE,EAAItB,cAAcmF,IAD7B,cACF1D,EADE,kBAAAL,EAAA,MAEF,EAAKhD,SAAS,CAAE2C,QAASU,EAAKA,KAAMZ,WAAW,KAF7C,sC,EAKVuE,aAAe,SAAAD,GACb,EAAK/G,SAAS,CAAEyC,WAAW,IAC3B,EAAKM,QAAQgE,I,wEAGL,IAAD,SACwBxG,KAAKV,MAA5B4C,EADD,EACCA,UAAWE,EADZ,EACYA,QACnB,OACE,oCACE,kBAACkE,EAAD,CACET,YAAY,iEACZa,SAAU,SAAAF,GAAK,OAAI,EAAKC,aAAaD,IACrCG,aAAW,EACXC,KAAK,UAEN1E,EACC,uBAAMgB,IAAI,cACR,uBACEZ,QAAQ,2DACRa,YAAY,iIACZnB,KAAK,UAIT,yBAAKuD,UAAU,SACZnD,EAAQgB,KAAI,SAAAC,GAAI,OACf,kBAAC,EAAD,CACE1B,GAAI0B,EAAK1B,GACTC,OAAQyB,EAAKzB,OACbC,QAASwB,EAAKxB,QACdyB,IAAKD,EAAK1B,SAKE,IAAnBS,EAAQyE,OAAe,uBAAOnH,MAAO,CAAEoH,UAAW,UAAe,Q,GA9C7BvG,a,sECHrCwG,E,IAAAA,OAEaC,E,2MACnB1H,MAAQ,CACN4C,WAAW,EACXE,QAAS,GACT6E,gBAAiB,I,EAGnBzE,QAAU,oBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACFE,EACH3B,eACA4B,MAAK,SAAAC,GACJ,EAAKpD,SAAS,CAAE2C,QAASS,EAASC,UAEnCC,OAAM,SAAAC,GACLkE,MAAMlE,OAPF,sC,EAWVmE,eAAiB,SAAAF,GACfxC,QAAQC,IAAI,4BAA6BuC,GACzC,EAAKxH,SAAS,CAAEwH,qB,EAGlBG,qBAAuB,SAACC,EAAOrE,GAC7BL,EACGzB,aAAamG,GACbzE,MAAK,SAAAC,GACJ,IAAQuC,MAAM,+CACd,EAAK5C,aAENO,OAAM,SAAAC,GACL,IAAQoC,MAAMpC,EAAEV,a,EAItBgF,2BAA6B,SAAOC,EAASvE,GAAhB,SAAAP,EAAAC,OAAA,gDAC3B6E,EAAQC,SAAQ,SAAAH,GACd1E,EACGzB,aAAamG,GACbzE,MAAK,SAAAC,GACJ,IAAQuC,MAAM,+CACd,EAAK5C,aAENO,OAAM,SAAAC,GACL,IAAQoC,MAAMpC,EAAEV,eATK,sC,EAc7BmF,kBAAoB,SAAC3G,EAASkC,GAC5ByB,QAAQC,IAAI,WAAY5D,GACxB6B,EACG1B,aAAa,CACZW,OAAQd,EAAQc,OAChBC,QAASf,EAAQe,QACjB6F,WAAY5G,EAAQ4G,aAErB9E,MAAK,SAAAC,GACJ4B,QAAQC,IAAI7B,GACZ,EAAKuE,qBAAqBtG,EAAQa,IAClC,EAAKa,aAENO,OAAM,SAAAqC,GACLX,QAAQC,IAAIU,O,EAIlBuC,wBAA0B,SAAO7G,EAASkC,GAAhB,SAAAP,EAAAC,OAAA,uDACxB+B,QAAQC,IAAI5D,GADY,WAAA2B,EAAA,MAElB3B,EAAQ0G,SAAQ,SAAAnE,GACpB,EAAK/D,MAAM8C,QAAQoF,SAAQ,SAAAI,GACrBvE,IAASuE,EAAOjG,KAClB8C,QAAQC,IAAI,UAAWkD,GACvBjF,EACG1B,aAAa,CACZW,OAAQgG,EAAOhG,OACfC,QAAS+F,EAAO/F,QAChB6F,WAAYE,EAAOF,aAEpB9E,MAAK,SAAAC,GACJ4B,QAAQC,IAAI,YAAa7B,GACzB,EAAKuE,qBAAqBQ,EAAOjG,IACjC,EAAKa,aAENO,OAAM,SAAAqC,GACLX,QAAQC,IAAI,SAAUU,cAlBR,OAuBxB,EAAK3F,SAAS,CAAEwH,gBAAiB,KAvBT,sC,mFA2BxBjH,KAAKwC,Y,+BAGG,IAAD,SAC8BxC,KAAKV,MAAlC8C,EADD,EACCA,QAAS6E,EADV,EACUA,gBACXY,EAAe,CACnBZ,kBACAa,SAAU9H,KAAKmH,gBAEXY,EAAcd,EAAgBJ,OAAS,EAE7C,OACE,oCACE,yBAAKnH,MAAO,CAAEsI,aAAc,KAC1B,uBACElG,MAAK,UAAKmF,EAAL,kGACLgB,UAAWjI,KAAK2H,wBAAwBO,KAAKlI,KAAMiH,GACnDkB,OAAO,SACPC,WAAW,qBACXC,UAAU,YAEV,uBAAQrG,KAAK,UAAUsG,UAAWP,GAAlC,gBAEU,KAEZ,uBAAS/F,KAAK,aACd,uBACEF,MAAK,UAAKmF,EAAgBJ,OAArB,8GACLoB,UAAWjI,KAAKsH,2BAA2BY,KACzClI,KACAiH,GAEFkB,OAAO,SACPC,WAAW,qBACXC,UAAU,WAEV,uBAAQrG,KAAK,SAASsG,UAAWP,GAAjC,iBAIF,0BAAMrI,MAAO,CAAE6I,WAAY,KACxBR,EAAW,UAAMd,EAAgBJ,OAAtB,wBAAsC,KAGtD,uBACE2B,WAAYpG,EACZyF,aAAcA,EACdjB,KAAK,QACL6B,OAAO,MAEP,kBAAC1B,EAAD,CAAQjF,MAAM,KAAK4G,UAAU,KAAKpF,IAAI,OACtC,kBAACyD,EAAD,CAAQjF,MAAM,SAAS4G,UAAU,SAASpF,IAAI,WAC9C,kBAACyD,EAAD,CAAQjF,MAAM,UAAU4G,UAAU,UAAUpF,IAAI,YAEhD,kBAACyD,EAAD,CACEjF,MAAM,SACNwB,IAAI,SACJqF,OAAQ,SAACC,EAAMC,EAAQxB,GAAf,OACN,6BACE,uBACEvF,MAAK,UAAK+G,EAAOlH,GAAZ,kGACLsG,UAAW,EAAKR,kBAAkBS,KAAK,EAAMW,GAC7CV,OAAO,SACPC,WAAW,qBACXC,UAAU,YAEV,uBAAQrG,KAAK,WAAb,iBAEF,uBAASA,KAAK,WAAWtC,MAAO,CAAEoJ,WAAY,YAC9C,uBACEhH,MAAK,UAAK+G,EAAOlH,GAAZ,kGACLsG,UAAW,EAAKb,qBAAqBc,KAAK,EAAMW,EAAOlH,IACvDwG,OAAO,SACPC,WAAW,qBACXC,UAAU,YAEV,uBAAQrG,KAAK,UAAb,sBAKD,S,GA/KkBzB,a,oZCEnC,IAAMwI,GAAWtH,YAAOuH,IAAPvH,CAAH,MAQRwH,GAAaxH,IAAOgB,EAAV,MAQKyG,G,2MACnB5J,MAAQ,CACN6J,YAAY,G,EAGdC,UAAY,WACV,EAAK3J,SAAS,CAAE0J,YAAY,K,iFAGZ7J,GAChBU,KAAKP,SAAS,CAAE0J,WAAY7J,EAAM+J,W,mCAGvBC,GACXA,EAAMzE,mB,+BAGE,IAAD,OACP,OACE,oCACE,kBAAC,QAAD,CACEwE,OAAQrJ,KAAKV,MAAM6J,WACnBI,cAAe,SAAAjK,GACb,EAAKkK,kBAAkBlK,KAGzB,kBAACyJ,GAAD,CACEnF,QAAS,kBAAM,EAAKwF,aACpBK,GAAG,IACH9H,GAAG,OACH4D,UAAU,aAEV,uBAAMvD,KAAK,SACX,0CAEF,kBAAC+G,GAAD,CACEnF,QAAS,kBAAM,EAAKwF,aACpBK,GAAG,UACH9H,GAAG,UACH4D,UAAU,aAEV,uBAAMvD,KAAK,SACX,4DAEF,kBAAC+G,GAAD,CACEnF,QAAS,kBAAM,EAAKwF,aACpBK,GAAG,UACH9H,GAAG,SACH4D,UAAU,aAEV,uBAAMvD,KAAK,WACX,4DAEF,kBAACiH,GAAD,CACE3I,KAAK,8CACLF,OAAO,SACPC,IAAI,sBACJsB,GAAG,UACH4D,UAAU,aAEV,uBAAMvD,KAAK,WACX,4D,GA7DyBzB,a,kSCbrC,IAAMmJ,GAAcC,YAAH,MAMIC,G,iLAEjB,OACE,oCACE,kBAACF,GAAD,MACA,uBAAQhK,MAAO,CAAEC,UAAW,UAC1B,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAOkK,KAAK,IAAIC,OAAO,EAAMC,UAAW9H,IACxC,kBAAC,IAAD,CAAO4H,KAAK,WAAWC,OAAO,EAAMC,UAAWzF,IAC/C,kBAAC,IAAD,CAAOuF,KAAK,WAAWC,OAAO,EAAMC,UAAWzD,IAC/C,kBAAC,IAAD,CAAOuD,KAAK,UAAUC,OAAO,EAAMC,UAAW/C,Y,GAZ3BzG,aCbjCyJ,IAASrB,OAAO,kBAAC,GAAD,MAASsB,SAASC,eAAe,W","file":"static/js/main.11230842.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Layout } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../css/appLayout.css\";\r\n\r\nconst { Content, Footer, Header } = Layout;\r\n\r\nexport default class AppLayout extends Component {\r\n  state = {\r\n    collapsed: false\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Header style={{ backgroundColor: \"inherit\" }}></Header>\r\n        <Content\r\n          style={{\r\n            margin: \"24px 16px\",\r\n            padding: 24,\r\n            background: \"#fff\",\r\n            minHeight: 280\r\n          }}\r\n        >\r\n          {this.props.children}\r\n        </Content>\r\n        <Footer style={{ textAlign: \"center\" }}>\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://github.com/CaesiumY/good-idea-cards\"\r\n          >\r\n            Good Idea Cards ©2020 Created by Caesiumy\r\n          </a>\r\n        </Footer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://127.0.0.1:8000/api\";\r\n\r\nexport default {\r\n  getAllPosts() {\r\n    return axios.get(\"/posts/\");\r\n  },\r\n\r\n  createPosts(payload) {\r\n    return axios.post(\"/posts/\", payload);\r\n  },\r\n\r\n  getAllDrafts() {\r\n    return axios.get(\"/drafts/\");\r\n  },\r\n\r\n  createDrafts(payload) {\r\n    return axios.post(\"/drafts/\", payload);\r\n  },\r\n\r\n  deleteDrafts(payload) {\r\n    return axios.delete(\"/drafts/\" + String(payload));\r\n  },\r\n\r\n  getSearchData(payload) {\r\n    const search_query = payload;\r\n    return axios.get(\"/search/\", {\r\n      params: {\r\n        search_query\r\n      }\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Card, Icon } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PostCard = styled(Card)`\r\n  font-family: \"Noto Serif KR\", serif;\r\n  word-break: keep-all;\r\n`;\r\n\r\nexport default class Posts extends Component {\r\n  render() {\r\n    const { id, author, content } = this.props;\r\n    return (\r\n      <div>\r\n        <PostCard title={`${id}번 카드`} bordered={false}>\r\n          <h2>\r\n            <Icon type=\"caret-right\" />\r\n            {author}\r\n          </h2>\r\n          <p>{content}</p>\r\n        </PostCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport api from \"../api\";\r\nimport Posts from \"../components/Posts\";\r\n\r\nimport { Spin, Alert, Empty, Button, notification } from \"antd\";\r\n\r\nexport default class Home extends Component {\r\n  state = {\r\n    isLoading: true,\r\n    isReloading: false,\r\n    results: []\r\n  };\r\n\r\n  openNotificationWithIcon = (type, message) => {\r\n    notification[type]({\r\n      message: `${message}`\r\n    });\r\n  };\r\n\r\n  getData = async () => {\r\n    await api\r\n      .getAllPosts()\r\n      .then(response => {\r\n        this.setState({\r\n          results: response.data,\r\n          isLoading: false,\r\n          isReloading: false\r\n        });\r\n      })\r\n      .catch(e => {\r\n        this.openNotificationWithIcon(\"error\", e);\r\n      });\r\n  };\r\n\r\n  reloadData = () => {\r\n    this.setState({ isReloading: true });\r\n    this.getData();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ results: [] });\r\n  }\r\n\r\n  render() {\r\n    const { results, isLoading, isReloading } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {isLoading ? (\r\n          <Spin tip=\"Loading...\">\r\n            <Alert\r\n              message=\"데이터를 불러오는 중\"\r\n              description=\"시간이 오래 걸린다면 서버가 닫혀있는 거랍니다.\"\r\n              type=\"info\"\r\n            />\r\n            <br />\r\n            <Empty />\r\n          </Spin>\r\n        ) : (\r\n          <div>\r\n            {results.map(item => (\r\n              <Posts\r\n                id={item.id}\r\n                author={item.author}\r\n                content={item.content}\r\n                key={item.id}\r\n              />\r\n            ))}\r\n            <Button\r\n              type=\"primary\"\r\n              block\r\n              style={{ position: \"relative\", top: \"150px\" }}\r\n              icon=\"reload\"\r\n              loading={isReloading}\r\n              onClick={this.reloadData}\r\n            >\r\n              새로 가져오기\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Alert } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function AlertMessage({\r\n  isSuccess,\r\n  isError,\r\n  errorMessage,\r\n  onClose\r\n}) {\r\n  return (\r\n    <>\r\n      {isSuccess && (\r\n        <Alert\r\n          message=\"제출 성공!\"\r\n          description=\"내용 검토 후 반영됩니다!\"\r\n          type=\"success\"\r\n          showIcon\r\n          closable\r\n          onClose={onClose}\r\n        />\r\n      )}\r\n      {isError && (\r\n        <Alert\r\n          message=\"제출 실패!\"\r\n          description={errorMessage}\r\n          type=\"error\"\r\n          showIcon\r\n          closable\r\n          onClose={onClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nAlertMessage.propTypes = {\r\n  isSuccess: PropTypes.bool.isRequired,\r\n  isError: PropTypes.bool.isRequired,\r\n  errorMessage: PropTypes.string,\r\n  onClose: PropTypes.func.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport api from \"../api\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst SubmitButton = styled(Button)`\r\n  @import url(\"https://fonts.googleapis.com/css?family=Noto+Sans+KR:400,900&display=swap&subset=korean\");\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-size: 1rem;\r\n  color: white;\r\n  background-color: #373a47;\r\n  border-color: #373a47;\r\n`;\r\n\r\nclass Draft extends Component {\r\n  state = {\r\n    author: \"\",\r\n    content: \"\",\r\n    isLoading: false,\r\n    isSuccess: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  onClose = e => {\r\n    this.setState({ isSuccess: false, isError: false });\r\n  };\r\n\r\n  pushData() {\r\n    this.enterLoading();\r\n    api\r\n      .createDrafts({\r\n        author: this.state.author,\r\n        content: this.state.content\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.exitLoading();\r\n        this.printSuccess();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        this.setState({ isError: true, errorMessage: error.message });\r\n        this.exitLoading();\r\n      });\r\n  }\r\n\r\n  printSuccess = () => {\r\n    this.setState({ isSuccess: true });\r\n  };\r\n\r\n  enterLoading = () => {\r\n    console.log(\"loading\");\r\n    this.setState({ isLoading: true });\r\n  };\r\n\r\n  exitLoading = () => {\r\n    console.log(\"loaded\");\r\n    this.setState({ isLoading: false });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        await this.setState({ author: values.author, content: values.content });\r\n        await this.pushData();\r\n        this.props.form.resetFields();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { isLoading, isSuccess, isError, errorMessage } = this.state;\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.handleSubmit} className=\"draft-form\">\r\n          <Form.Item>\r\n            {getFieldDecorator(\"author\", {\r\n              rules: [{ required: true, message: \"첫 번째 칸을 채워주세요!\" }]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                placeholder=\"인물 또는 성어를 적어주세요.\"\r\n                allowClear\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"content\", {\r\n              rules: [{ required: true, message: \"두 번째 칸을 채워주세요!\" }]\r\n            })(\r\n              <TextArea\r\n                placeholder=\"내용을 적어주세요.\"\r\n                autoSize={{ minRows: 4, maxRows: 8 }}\r\n                allowClear\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <SubmitButton\r\n              htmlType=\"submit\"\r\n              className=\"draft-form-button\"\r\n              block\r\n              loading={isLoading}\r\n              type=\"primary\"\r\n            >\r\n              제출하기\r\n            </SubmitButton>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n        <AlertMessage\r\n          isSuccess={isSuccess}\r\n          isError={isError}\r\n          errorMessage={errorMessage}\r\n          onClose={this.onClose}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst WrappedDraftForm = Form.create({ name: \"Draft\" })(Draft);\r\n\r\nexport default WrappedDraftForm;\r\n","import React, { Component } from \"react\";\r\nimport { Empty, Input, Spin, Alert } from \"antd\";\r\nimport Posts from \"../components/Posts\";\r\nimport api from \"../api\";\r\n\r\nconst { Search } = Input;\r\n\r\nexport default class SearchContainer extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    results: []\r\n  };\r\n\r\n  getData = async value => {\r\n    const data = await api.getSearchData(value);\r\n    await this.setState({ results: data.data, isLoading: false });\r\n  };\r\n\r\n  handleSearch = value => {\r\n    this.setState({ isLoading: true });\r\n    this.getData(value);\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, results } = this.state;\r\n    return (\r\n      <>\r\n        <Search\r\n          placeholder=\"검색어를 입력해주세요.\"\r\n          onSearch={value => this.handleSearch(value)}\r\n          enterButton\r\n          size=\"large\"\r\n        />\r\n        {isLoading ? (\r\n          <Spin tip=\"Loading...\">\r\n            <Alert\r\n              message=\"데이터를 불러오는 중\"\r\n              description=\"시간이 오래 걸린다면 서버가 닫혀있는 거랍니다.\"\r\n              type=\"info\"\r\n            />\r\n          </Spin>\r\n        ) : (\r\n          <div className=\"posts\">\r\n            {results.map(item => (\r\n              <Posts\r\n                id={item.id}\r\n                author={item.author}\r\n                content={item.content}\r\n                key={item.id}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n        {results.length === 0 ? <Empty style={{ marginTop: \"75px\" }} /> : \"\"}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Table, Divider, Button, Popconfirm, message } from \"antd\";\r\nimport api from \"../api\";\r\n\r\nconst { Column } = Table;\r\n\r\nexport default class Admin extends Component {\r\n  state = {\r\n    isLoading: true,\r\n    results: [],\r\n    selectedRowKeys: []\r\n  };\r\n\r\n  getData = async () => {\r\n    await api\r\n      .getAllDrafts()\r\n      .then(response => {\r\n        this.setState({ results: response.data });\r\n      })\r\n      .catch(e => {\r\n        alert(e);\r\n      });\r\n  };\r\n\r\n  onSelectChange = selectedRowKeys => {\r\n    console.log(\"selectedRowKeys changed: \", selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  confirmDeleteOneItem = (index, e) => {\r\n    api\r\n      .deleteDrafts(index)\r\n      .then(response => {\r\n        message.error(\"삭제되었습니다.\");\r\n        this.getData();\r\n      })\r\n      .catch(e => {\r\n        message.error(e.message);\r\n      });\r\n  };\r\n\r\n  confirmDeleteMultipleItems = async (indexes, e) => {\r\n    indexes.forEach(index => {\r\n      api\r\n        .deleteDrafts(index)\r\n        .then(response => {\r\n          message.error(\"삭제되었습니다.\");\r\n          this.getData();\r\n        })\r\n        .catch(e => {\r\n          message.error(e.message);\r\n        });\r\n    });\r\n  };\r\n\r\n  confirmAddOneItem = (payload, e) => {\r\n    console.log(\"payload:\", payload);\r\n    api\r\n      .createDrafts({\r\n        author: payload.author,\r\n        content: payload.content,\r\n        created_at: payload.created_at\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.confirmDeleteOneItem(payload.id);\r\n        this.getData();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  confirmAddMultipleItems = async (payload, e) => {\r\n    console.log(payload);\r\n    await payload.forEach(item => {\r\n      this.state.results.forEach(result => {\r\n        if (item === result.id) {\r\n          console.log(\"result:\", result);\r\n          api\r\n            .createDrafts({\r\n              author: result.author,\r\n              content: result.content,\r\n              created_at: result.created_at\r\n            })\r\n            .then(response => {\r\n              console.log(\"response:\", response);\r\n              this.confirmDeleteOneItem(result.id);\r\n              this.getData();\r\n            })\r\n            .catch(error => {\r\n              console.log(\"error:\", error);\r\n            });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ selectedRowKeys: [] });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  render() {\r\n    const { results, selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    return (\r\n      <>\r\n        <div style={{ marginBottom: 16 }}>\r\n          <Popconfirm\r\n            title={`${selectedRowKeys}번 항목을 정말로 추가하시겠습니까?`}\r\n            onConfirm={this.confirmAddMultipleItems.bind(this, selectedRowKeys)}\r\n            okText=\"예\"\r\n            cancelText=\"아니오\"\r\n            placement=\"topRight\"\r\n          >\r\n            <Button type=\"primary\" disabled={!hasSelected}>\r\n              추가\r\n            </Button>{\" \"}\r\n          </Popconfirm>\r\n          <Divider type=\"vertical\" />\r\n          <Popconfirm\r\n            title={`${selectedRowKeys.length}개의 아이템을 정말로 삭제하시겠습니까?`}\r\n            onConfirm={this.confirmDeleteMultipleItems.bind(\r\n              this,\r\n              selectedRowKeys\r\n            )}\r\n            okText=\"예\"\r\n            cancelText=\"아니오\"\r\n            placement=\"topLeft\"\r\n          >\r\n            <Button type=\"danger\" disabled={!hasSelected}>\r\n              삭제\r\n            </Button>\r\n          </Popconfirm>\r\n          <span style={{ marginLeft: 15 }}>\r\n            {hasSelected ? `${selectedRowKeys.length} 개 선택` : \"\"}\r\n          </span>\r\n        </div>\r\n        <Table\r\n          dataSource={results}\r\n          rowSelection={rowSelection}\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n        >\r\n          <Column title=\"Id\" dataIndex=\"id\" key=\"id\" />\r\n          <Column title=\"Author\" dataIndex=\"author\" key=\"author\" />\r\n          <Column title=\"Content\" dataIndex=\"content\" key=\"content\" />\r\n\r\n          <Column\r\n            title=\"Action\"\r\n            key=\"action\"\r\n            render={(text, record, index) => (\r\n              <div>\r\n                <Popconfirm\r\n                  title={`${record.id}번 항목을 정말로 추가하시겠습니까?`}\r\n                  onConfirm={this.confirmAddOneItem.bind(this, record)}\r\n                  okText=\"예\"\r\n                  cancelText=\"아니오\"\r\n                  placement=\"topRight\"\r\n                >\r\n                  <Button type=\"default\">추가</Button>\r\n                </Popconfirm>\r\n                <Divider type=\"vertical\" style={{ visibility: \"hidden\" }} />\r\n                <Popconfirm\r\n                  title={`${record.id}번 항목을 정말로 삭제하시겠습니까?`}\r\n                  onConfirm={this.confirmDeleteOneItem.bind(this, record.id)}\r\n                  okText=\"예\"\r\n                  cancelText=\"아니오\"\r\n                  placement=\"topRight\"\r\n                >\r\n                  <Button type=\"danger\">삭제</Button>\r\n                </Popconfirm>\r\n              </div>\r\n            )}\r\n          />\r\n        </Table>{\" \"}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Icon } from \"antd\";\r\n\r\nimport \"../css/sideNav.css\";\r\n\r\nconst MenuLink = styled(Link)`\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  color: white;\r\n  padding: 0.8em;\r\n`;\r\n\r\nconst MenuAnchor = styled.a`\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  color: white;\r\n  padding: 0.8em;\r\n`;\r\n\r\nexport default class SideNav extends Component {\r\n  state = {\r\n    isOpenMenu: false\r\n  };\r\n\r\n  closeMenu = () => {\r\n    this.setState({ isOpenMenu: false });\r\n  };\r\n\r\n  handleStateChange(state) {\r\n    this.setState({ isOpenMenu: state.isOpen });\r\n  }\r\n\r\n  showSettings(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Menu\r\n          isOpen={this.state.isOpenMenu}\r\n          onStateChange={state => {\r\n            this.handleStateChange(state);\r\n          }}\r\n        >\r\n          <MenuLink\r\n            onClick={() => this.closeMenu()}\r\n            to=\"/\"\r\n            id=\"home\"\r\n            className=\"menu-item\"\r\n          >\r\n            <Icon type=\"home\" />\r\n            <span> 홈</span>\r\n          </MenuLink>\r\n          <MenuLink\r\n            onClick={() => this.closeMenu()}\r\n            to=\"/drafts\"\r\n            id=\"suggest\"\r\n            className=\"menu-item\"\r\n          >\r\n            <Icon type=\"edit\" />\r\n            <span> 제안하기</span>\r\n          </MenuLink>\r\n          <MenuLink\r\n            onClick={() => this.closeMenu()}\r\n            to=\"/search\"\r\n            id=\"search\"\r\n            className=\"menu-item\"\r\n          >\r\n            <Icon type=\"search\" />\r\n            <span> 검색하기</span>\r\n          </MenuLink>\r\n          <MenuAnchor\r\n            href=\"https://github.com/CaesiumY/good-idea-cards\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            id=\"contact\"\r\n            className=\"menu-item\"\r\n          >\r\n            <Icon type=\"github\" />\r\n            <span> 깃허브</span>\r\n          </MenuAnchor>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport { createGlobalStyle } from \"styled-components\";\nimport AppLayout from \"./container/AppLayout\";\nimport Home from \"./routes/Home\";\nimport Draft from \"./routes/Draft\";\nimport Search from \"./routes/Search\";\nimport Admin from \"./routes/Admin\";\nimport SideNav from \"./components/SideNav\";\n\nconst GlobalStyle = createGlobalStyle`\n  @import url(\"https://fonts.googleapis.com/css?family=Noto+Sans+KR:400,900&display=swap&subset=korean\");\n  @import url(\"https://fonts.googleapis.com/css?family=Noto+Serif+KR:400,700&display=swap&subset=korean\");\n\n`;\n\nexport default class App extends Component {\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <Layout style={{ minHeight: \"100vh\" }}>\n          <HashRouter>\n            <SideNav></SideNav>\n            <AppLayout>\n              <Route path=\"/\" exact={true} component={Home}></Route>\n              <Route path=\"/drafts/\" exact={true} component={Draft}></Route>\n              <Route path=\"/search/\" exact={true} component={Search}></Route>\n              <Route path=\"/admin/\" exact={true} component={Admin}></Route>\n            </AppLayout>\n          </HashRouter>\n        </Layout>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}