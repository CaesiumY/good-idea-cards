{"version":3,"sources":["container/AppLayout.js","api.js","components/Posts.js","routes/Home.js","components/AlertMessage.js","routes/Draft.js","routes/Search.js","components/SideNav.js","App.js","index.js"],"names":["Content","Footer","Header","AppLayout","state","collapsed","toggle","setState","style","minHeight","backgroundColor","margin","padding","background","this","props","children","textAlign","target","rel","href","Component","axios","defaults","baseURL","getAllPosts","get","getAllDrafts","createDrafts","payload","post","PostCard","styled","Posts","id","author","content","className","title","bordered","type","Home","isLoading","results","getData","a","async","api","data","stopLoading","setTimeout","tip","message","description","map","item","key","AlertMessage","isSuccess","isError","errorMessage","onClose","showIcon","closable","TextArea","SubmitButton","Draft","e","printSuccess","enterLoading","console","log","exitLoading","handleSubmit","preventDefault","form","validateFields","err","values","pushData","resetFields","then","response","catch","error","getFieldDecorator","onSubmit","Item","rules","required","prefix","color","placeholder","allowClear","autoSize","minRows","maxRows","htmlType","block","loading","WrappedDraftForm","create","name","Search","MenuLink","Link","MenuAnchor","SideNav","isOpenMenu","closeMenu","isOpen","event","onStateChange","handleStateChange","onClick","to","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.249b0c21.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Layout } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../css/appLayout.css\";\r\n\r\nconst { Content, Footer, Header } = Layout;\r\n\r\nexport default class AppLayout extends Component {\r\n  state = {\r\n    collapsed: false\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Header style={{ backgroundColor: \"inherit\" }}></Header>\r\n        <Content\r\n          style={{\r\n            margin: \"24px 16px\",\r\n            padding: 24,\r\n            background: \"#fff\",\r\n            minHeight: 280\r\n          }}\r\n        >\r\n          {this.props.children}\r\n        </Content>\r\n        <Footer style={{ textAlign: \"center\" }}>\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://github.com/CaesiumY/good-idea-cards\"\r\n          >\r\n            Good Idea Cards ©2020 Created by Caesiumy\r\n          </a>\r\n        </Footer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://127.0.0.1:8000/api\";\r\n\r\nexport default {\r\n  getAllPosts() {\r\n    return axios.get(\"/posts/\");\r\n  },\r\n\r\n  getAllDrafts() {\r\n    return axios.get(\"/drafts/\");\r\n  },\r\n\r\n  createDrafts(payload) {\r\n    return axios.post(\"/drafts/\", payload);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Card, Icon } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PostCard = styled(Card)`\r\n  @import url(\"https://fonts.googleapis.com/css?family=Noto+Serif+KR:400,700&display=swap&subset=korean\");\r\n  font-family: \"Noto Serif KR\", serif;\r\n  word-break: keep-all;\r\n`;\r\n\r\nexport default class Posts extends Component {\r\n  render() {\r\n    const { id, author, content } = this.props;\r\n    return (\r\n      <div className=\"post\">\r\n        <PostCard title={id} bordered={false}>\r\n          <h2 className=\"post__author\">\r\n            <Icon type=\"caret-right\" />\r\n            {author}\r\n          </h2>\r\n          <p className=\"post__content\">{content}</p>\r\n        </PostCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport api from \"../api\";\r\nimport Posts from \"../components/Posts\";\r\n\r\nimport { Spin, Alert, Empty } from \"antd\";\r\n\r\nexport default class Home extends Component {\r\n  state = {\r\n    isLoading: true,\r\n    results: []\r\n  };\r\n\r\n  getData = async () => {\r\n    const data = await api.getAllPosts();\r\n    this.setState({ results: data.data, isLoading: false });\r\n  };\r\n\r\n  stopLoading = () => {\r\n    setTimeout(() => {\r\n      this.setState({ isLoading: false });\r\n    }, 5000);\r\n  };\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n  render() {\r\n    const { results, isLoading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {isLoading ? (\r\n          <Spin tip=\"Loading...\">\r\n            <Alert\r\n              message=\"데이터를 불러오는 중\"\r\n              description=\"시간이 오래 걸린다면 서버가 닫혀있는 거랍니다.\"\r\n              type=\"info\"\r\n            />\r\n            <br />\r\n            <Empty />\r\n          </Spin>\r\n        ) : (\r\n          <div className=\"posts\">\r\n            {results.map(item => (\r\n              <Posts\r\n                id={item.id}\r\n                author={item.author}\r\n                content={item.content}\r\n                key={item.id}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Alert } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function AlertMessage({\r\n  isSuccess,\r\n  isError,\r\n  errorMessage,\r\n  onClose\r\n}) {\r\n  return (\r\n    <>\r\n      {isSuccess && (\r\n        <Alert\r\n          message=\"제출 성공!\"\r\n          description=\"내용 검토 후 반영됩니다!\"\r\n          type=\"success\"\r\n          showIcon\r\n          closable\r\n          onClose={onClose}\r\n        />\r\n      )}\r\n      {isError && (\r\n        <Alert\r\n          message=\"제출 실패!\"\r\n          description={errorMessage}\r\n          type=\"error\"\r\n          showIcon\r\n          closable\r\n          onClose={onClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nAlertMessage.propTypes = {\r\n  isSuccess: PropTypes.bool.isRequired,\r\n  isError: PropTypes.bool.isRequired,\r\n  errorMessage: PropTypes.string,\r\n  onClose: PropTypes.func.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport api from \"../api\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst SubmitButton = styled(Button)`\r\n  @import url(\"https://fonts.googleapis.com/css?family=Noto+Sans+KR:400,900&display=swap&subset=korean\");\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-size: 1rem;\r\n  color: white;\r\n  background-color: #373a47;\r\n  border-color: #373a47;\r\n`;\r\n\r\nclass Draft extends Component {\r\n  state = {\r\n    author: \"\",\r\n    content: \"\",\r\n    isLoading: false,\r\n    isSuccess: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  onClose = e => {\r\n    this.setState({ isSuccess: false, isError: false });\r\n  };\r\n\r\n  pushData() {\r\n    this.enterLoading();\r\n    api\r\n      .createDrafts({\r\n        author: this.state.author,\r\n        content: this.state.content\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.exitLoading();\r\n        this.printSuccess();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        this.setState({ isError: true, errorMessage: error.message });\r\n        this.exitLoading();\r\n      });\r\n  }\r\n\r\n  printSuccess = () => {\r\n    this.setState({ isSuccess: true });\r\n  };\r\n\r\n  enterLoading = () => {\r\n    console.log(\"loading\");\r\n    this.setState({ isLoading: true });\r\n  };\r\n\r\n  exitLoading = () => {\r\n    console.log(\"loaded\");\r\n    this.setState({ isLoading: false });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        await this.setState({ author: values.author, content: values.content });\r\n        await this.pushData();\r\n        this.props.form.resetFields();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { isLoading, isSuccess, isError, errorMessage } = this.state;\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.handleSubmit} className=\"draft-form\">\r\n          <Form.Item>\r\n            {getFieldDecorator(\"author\", {\r\n              rules: [{ required: true, message: \"첫 번째 칸을 채워주세요!\" }]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                placeholder=\"인물 또는 성어를 적어주세요.\"\r\n                allowClear\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"content\", {\r\n              rules: [{ required: true, message: \"두 번째 칸을 채워주세요!\" }]\r\n            })(\r\n              <TextArea\r\n                placeholder=\"내용을 적어주세요.\"\r\n                autoSize={{ minRows: 4, maxRows: 8 }}\r\n                allowClear\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <SubmitButton\r\n              htmlType=\"submit\"\r\n              className=\"draft-form-button\"\r\n              block\r\n              loading={isLoading}\r\n              type=\"primary\"\r\n            >\r\n              제출하기\r\n            </SubmitButton>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n        <AlertMessage\r\n          isSuccess={isSuccess}\r\n          isError={isError}\r\n          errorMessage={errorMessage}\r\n          onClose={this.onClose}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst WrappedDraftForm = Form.create({ name: \"Draft\" })(Draft);\r\n\r\nexport default WrappedDraftForm;\r\n","import React, { Component } from \"react\";\r\nimport { Empty } from \"antd\";\r\n\r\nexport default class Search extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Empty />\r\n        <p style={{ textAlign: \"center\" }}>서비스 준비중입니다...</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Icon } from \"antd\";\r\n\r\nimport \"../css/sideNav.css\";\r\n\r\nconst MenuLink = styled(Link)`\r\n  @import url(\"https://fonts.googleapis.com/css?family=Noto+Sans+KR:400,900&display=swap&subset=korean\");\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  color: white;\r\n  padding: 0.8em;\r\n`;\r\n\r\nconst MenuAnchor = styled.a`\r\n  @import url(\"https://fonts.googleapis.com/css?family=Noto+Sans+KR:400,900&display=swap&subset=korean\");\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  color: white;\r\n  padding: 0.8em;\r\n`;\r\n\r\nexport default class SideNav extends Component {\r\n  state = {\r\n    isOpenMenu: false\r\n  };\r\n\r\n  closeMenu = () => {\r\n    this.setState({ isOpenMenu: false });\r\n  };\r\n\r\n  handleStateChange(state) {\r\n    this.setState({ isOpenMenu: state.isOpen });\r\n  }\r\n\r\n  showSettings(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Menu\r\n          isOpen={this.state.isOpenMenu}\r\n          onStateChange={state => {\r\n            this.handleStateChange(state);\r\n          }}\r\n        >\r\n          <MenuLink\r\n            onClick={() => this.closeMenu()}\r\n            to=\"/\"\r\n            id=\"home\"\r\n            className=\"menu-item\"\r\n          >\r\n            <Icon type=\"home\" />\r\n            <span> 홈</span>\r\n          </MenuLink>\r\n          <MenuLink\r\n            onClick={() => this.closeMenu()}\r\n            to=\"/drafts\"\r\n            id=\"suggest\"\r\n            className=\"menu-item\"\r\n          >\r\n            <Icon type=\"edit\" />\r\n            <span> 제안하기</span>\r\n          </MenuLink>\r\n          <MenuLink\r\n            onClick={() => this.closeMenu()}\r\n            to=\"/search\"\r\n            id=\"search\"\r\n            className=\"menu-item\"\r\n          >\r\n            <Icon type=\"search\" />\r\n            <span> 검색하기</span>\r\n          </MenuLink>\r\n          <MenuAnchor\r\n            href=\"https://github.com/CaesiumY/good-idea-cards\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            id=\"contact\"\r\n            className=\"menu-item\"\r\n          >\r\n            <Icon type=\"github\" />\r\n            <span> 깃허브</span>\r\n          </MenuAnchor>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport AppLayout from \"./container/AppLayout\";\nimport Home from \"./routes/Home\";\nimport Draft from \"./routes/Draft\";\nimport Search from \"./routes/Search\";\nimport SideNav from \"./components/SideNav\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <>\n        <Layout style={{ minHeight: \"100vh\" }}>\n          <HashRouter>\n            <SideNav></SideNav>\n            <AppLayout>\n              <Route path=\"/\" exact={true} component={Home}></Route>\n              <Route path=\"/drafts/\" exact={true} component={Draft}></Route>\n              <Route path=\"/search/\" exact={true} component={Search}></Route>\n            </AppLayout>\n          </HashRouter>\n        </Layout>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}