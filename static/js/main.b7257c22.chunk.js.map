{"version":3,"sources":["container/AppLayout.js","api.js","components/Posts.js","routes/Home.js","components/AlertMessage.js","routes/Draft.js","routes/Search.js","routes/Admin.js","components/SideNav.js","App.js","serviceWorker.js","index.js"],"names":["Content","Footer","Header","AppLayout","state","collapsed","toggle","setState","style","minHeight","backgroundColor","margin","padding","background","minWidth","maxWidth","boxShadow","this","props","children","textAlign","target","rel","href","Component","axios","defaults","baseURL","apis","getAllPosts","get","createPosts","payload","post","getAllDrafts","createDrafts","deleteDrafts","delete","String","getSearchData","search_query","params","PostCard","styled","Posts","id","author","content","title","bordered","type","Home","isLoading","isReloading","results","openNotificationWithIcon","message","notification","getData","api","then","response","data","catch","e","reloadData","tip","description","map","item","block","position","top","icon","loading","onClick","AlertMessage","isSuccess","isError","errorMessage","onClose","showIcon","closable","TextArea","SubmitButton","Draft","printSuccess","enterLoading","console","log","exitLoading","handleSubmit","preventDefault","form","validateFields","err","values","pushData","resetFields","error","getFieldDecorator","onSubmit","className","Item","rules","required","prefix","color","placeholder","allowClear","autoSize","minRows","maxRows","htmlType","WrappedDraftForm","create","name","Search","SearchContainer","value","handleSearch","onSearch","enterButton","size","length","marginTop","Column","Admin","selectedRowKeys","alert","onSelectChange","confirmDeleteOneItem","index","confirmDeleteMultipleItems","indexes","forEach","confirmAddOneItem","created_at","confirmAddMultipleItems","result","rowSelection","onChange","hasSelected","marginBottom","onConfirm","bind","okText","cancelText","placement","disabled","marginLeft","dataSource","rowKey","dataIndex","render","text","record","visibility","MenuLink","Link","MenuAnchor","a","SideNav","isOpenMenu","closeMenu","isOpen","event","onStateChange","handleStateChange","to","GlobalStyle","createGlobalStyle","App","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b7257c22.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Layout } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../css/appLayout.css\";\r\n\r\nconst { Content, Footer, Header } = Layout;\r\n\r\nexport default class AppLayout extends Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Header style={{ backgroundColor: \"inherit\" }}></Header>\r\n        <Content\r\n          style={{\r\n            margin: \"24px auto\",\r\n            padding: 24,\r\n            background: \"#fff\",\r\n            minHeight: 280,\r\n            minWidth: \"60%\",\r\n            maxWidth: 720,\r\n            boxShadow: \"4px 4px 4px rgba(0,0,0, 0.1)\",\r\n          }}\r\n        >\r\n          {this.props.children}\r\n        </Content>\r\n        <Footer style={{ textAlign: \"center\" }}>\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://github.com/CaesiumY/good-idea-cards\"\r\n          >\r\n            Good Idea Cards ©2020 Created by Caesiumy\r\n          </a>\r\n        </Footer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://good-idea-cards.herokuapp.com/api\";\r\n\r\nconst apis = {\r\n  getAllPosts() {\r\n    return axios.get(\"/posts/\");\r\n  },\r\n\r\n  createPosts(payload) {\r\n    return axios.post(\"/posts/\", payload);\r\n  },\r\n\r\n  getAllDrafts() {\r\n    return axios.get(\"/drafts/\");\r\n  },\r\n\r\n  createDrafts(payload) {\r\n    return axios.post(\"/drafts/\", payload);\r\n  },\r\n\r\n  deleteDrafts(payload) {\r\n    return axios.delete(\"/drafts/\" + String(payload));\r\n  },\r\n\r\n  getSearchData(payload) {\r\n    const search_query = payload;\r\n    return axios.get(\"/search/\", {\r\n      params: {\r\n        search_query,\r\n      },\r\n    });\r\n  },\r\n};\r\n\r\nexport default apis;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Icon } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PostCard = styled(Card)`\r\n  font-family: \"Noto Serif KR\", serif;\r\n  word-break: keep-all;\r\n`;\r\n\r\nexport default class Posts extends Component {\r\n  render() {\r\n    const { id, author, content } = this.props;\r\n    return (\r\n      <div>\r\n        <PostCard title={`${id}번 카드`} bordered={false}>\r\n          <h2>\r\n            <Icon type=\"caret-right\" />\r\n            {author}\r\n          </h2>\r\n          <p>{content}</p>\r\n        </PostCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport api from \"../api\";\r\nimport Posts from \"../components/Posts\";\r\n\r\nimport { Spin, Alert, Empty, Button, notification } from \"antd\";\r\n\r\nexport default class Home extends Component {\r\n  state = {\r\n    isLoading: true,\r\n    isReloading: false,\r\n    results: []\r\n  };\r\n\r\n  openNotificationWithIcon = (type, message) => {\r\n    notification[type]({\r\n      message: `${message}`\r\n    });\r\n  };\r\n\r\n  getData = async () => {\r\n    await api\r\n      .getAllPosts()\r\n      .then(response => {\r\n        this.setState({\r\n          results: response.data,\r\n          isLoading: false,\r\n          isReloading: false\r\n        });\r\n      })\r\n      .catch(e => {\r\n        this.openNotificationWithIcon(\"error\", e);\r\n      });\r\n  };\r\n\r\n  reloadData = () => {\r\n    this.setState({ isReloading: true });\r\n    this.getData();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ results: [] });\r\n  }\r\n\r\n  render() {\r\n    const { results, isLoading, isReloading } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {isLoading ? (\r\n          <Spin tip=\"Loading...\">\r\n            <Alert\r\n              message=\"데이터를 불러오는 중\"\r\n              description=\"시간이 오래 걸린다면 서버가 닫혀있는 거랍니다.\"\r\n              type=\"info\"\r\n            />\r\n            <br />\r\n            <Empty />\r\n          </Spin>\r\n        ) : (\r\n          <div>\r\n            {results.map(item => (\r\n              <Posts\r\n                id={item.id}\r\n                author={item.author}\r\n                content={item.content}\r\n                key={item.id}\r\n              />\r\n            ))}\r\n            <Button\r\n              type=\"primary\"\r\n              block\r\n              style={{ position: \"relative\", top: \"150px\" }}\r\n              icon=\"reload\"\r\n              loading={isReloading}\r\n              onClick={this.reloadData}\r\n            >\r\n              새로 가져오기\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Alert } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function AlertMessage({\r\n  isSuccess,\r\n  isError,\r\n  errorMessage,\r\n  onClose\r\n}) {\r\n  return (\r\n    <>\r\n      {isSuccess && (\r\n        <Alert\r\n          message=\"제출 성공!\"\r\n          description=\"내용 검토 후 반영됩니다!\"\r\n          type=\"success\"\r\n          showIcon\r\n          closable\r\n          onClose={onClose}\r\n        />\r\n      )}\r\n      {isError && (\r\n        <Alert\r\n          message=\"제출 실패!\"\r\n          description={errorMessage}\r\n          type=\"error\"\r\n          showIcon\r\n          closable\r\n          onClose={onClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nAlertMessage.propTypes = {\r\n  isSuccess: PropTypes.bool.isRequired,\r\n  isError: PropTypes.bool.isRequired,\r\n  errorMessage: PropTypes.string,\r\n  onClose: PropTypes.func.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport api from \"../api\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst SubmitButton = styled(Button)`\r\n  @import url(\"https://fonts.googleapis.com/css?family=Noto+Sans+KR:400,900&display=swap&subset=korean\");\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-size: 1rem;\r\n  color: white;\r\n  background-color: #373a47;\r\n  border-color: #373a47;\r\n`;\r\n\r\nclass Draft extends Component {\r\n  state = {\r\n    author: \"\",\r\n    content: \"\",\r\n    isLoading: false,\r\n    isSuccess: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  onClose = e => {\r\n    this.setState({ isSuccess: false, isError: false });\r\n  };\r\n\r\n  pushData() {\r\n    this.enterLoading();\r\n    api\r\n      .createDrafts({\r\n        author: this.state.author,\r\n        content: this.state.content\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.exitLoading();\r\n        this.printSuccess();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        this.setState({ isError: true, errorMessage: error.message });\r\n        this.exitLoading();\r\n      });\r\n  }\r\n\r\n  printSuccess = () => {\r\n    this.setState({ isSuccess: true });\r\n  };\r\n\r\n  enterLoading = () => {\r\n    console.log(\"loading\");\r\n    this.setState({ isLoading: true });\r\n  };\r\n\r\n  exitLoading = () => {\r\n    console.log(\"loaded\");\r\n    this.setState({ isLoading: false });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        await this.setState({ author: values.author, content: values.content });\r\n        await this.pushData();\r\n        this.props.form.resetFields();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { isLoading, isSuccess, isError, errorMessage } = this.state;\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.handleSubmit} className=\"draft-form\">\r\n          <Form.Item>\r\n            {getFieldDecorator(\"author\", {\r\n              rules: [{ required: true, message: \"첫 번째 칸을 채워주세요!\" }]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                placeholder=\"인물 또는 성어를 적어주세요.\"\r\n                allowClear\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"content\", {\r\n              rules: [{ required: true, message: \"두 번째 칸을 채워주세요!\" }]\r\n            })(\r\n              <TextArea\r\n                placeholder=\"내용을 적어주세요.\"\r\n                autoSize={{ minRows: 4, maxRows: 8 }}\r\n                allowClear\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <SubmitButton\r\n              htmlType=\"submit\"\r\n              className=\"draft-form-button\"\r\n              block\r\n              loading={isLoading}\r\n              type=\"primary\"\r\n            >\r\n              제출하기\r\n            </SubmitButton>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n        <AlertMessage\r\n          isSuccess={isSuccess}\r\n          isError={isError}\r\n          errorMessage={errorMessage}\r\n          onClose={this.onClose}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst WrappedDraftForm = Form.create({ name: \"Draft\" })(Draft);\r\n\r\nexport default WrappedDraftForm;\r\n","import React, { Component } from \"react\";\r\nimport { Empty, Input, Spin, Alert } from \"antd\";\r\nimport Posts from \"../components/Posts\";\r\nimport api from \"../api\";\r\n\r\nconst { Search } = Input;\r\n\r\nexport default class SearchContainer extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    results: []\r\n  };\r\n\r\n  getData = async value => {\r\n    const data = await api.getSearchData(value);\r\n    await this.setState({ results: data.data, isLoading: false });\r\n  };\r\n\r\n  handleSearch = value => {\r\n    this.setState({ isLoading: true });\r\n    this.getData(value);\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, results } = this.state;\r\n    return (\r\n      <>\r\n        <Search\r\n          placeholder=\"검색어를 입력해주세요.\"\r\n          onSearch={value => this.handleSearch(value)}\r\n          enterButton\r\n          size=\"large\"\r\n        />\r\n        {isLoading ? (\r\n          <Spin tip=\"Loading...\">\r\n            <Alert\r\n              message=\"데이터를 불러오는 중\"\r\n              description=\"시간이 오래 걸린다면 서버가 닫혀있는 거랍니다.\"\r\n              type=\"info\"\r\n            />\r\n          </Spin>\r\n        ) : (\r\n          <div className=\"posts\">\r\n            {results.map(item => (\r\n              <Posts\r\n                id={item.id}\r\n                author={item.author}\r\n                content={item.content}\r\n                key={item.id}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n        {results.length === 0 ? <Empty style={{ marginTop: \"75px\" }} /> : \"\"}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Table, Divider, Button, Popconfirm, message } from \"antd\";\r\nimport api from \"../api\";\r\n\r\nconst { Column } = Table;\r\n\r\nexport default class Admin extends Component {\r\n  state = {\r\n    isLoading: true,\r\n    results: [],\r\n    selectedRowKeys: []\r\n  };\r\n\r\n  getData = async () => {\r\n    await api\r\n      .getAllDrafts()\r\n      .then(response => {\r\n        this.setState({ results: response.data });\r\n      })\r\n      .catch(e => {\r\n        alert(e);\r\n      });\r\n  };\r\n\r\n  onSelectChange = selectedRowKeys => {\r\n    console.log(\"selectedRowKeys changed: \", selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  confirmDeleteOneItem = (index, e) => {\r\n    api\r\n      .deleteDrafts(index)\r\n      .then(response => {\r\n        message.error(\"삭제되었습니다.\");\r\n        this.getData();\r\n      })\r\n      .catch(e => {\r\n        message.error(e.message);\r\n      });\r\n  };\r\n\r\n  confirmDeleteMultipleItems = async (indexes, e) => {\r\n    indexes.forEach(index => {\r\n      api\r\n        .deleteDrafts(index)\r\n        .then(response => {\r\n          message.error(\"삭제되었습니다.\");\r\n          this.getData();\r\n        })\r\n        .catch(e => {\r\n          message.error(e.message);\r\n        });\r\n    });\r\n  };\r\n\r\n  confirmAddOneItem = (payload, e) => {\r\n    console.log(\"payload:\", payload);\r\n    api\r\n      .createPosts({\r\n        author: payload.author,\r\n        content: payload.content,\r\n        created_at: payload.created_at\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.confirmDeleteOneItem(payload.id);\r\n        this.getData();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  confirmAddMultipleItems = async (payload, e) => {\r\n    console.log(payload);\r\n    await payload.forEach(item => {\r\n      this.state.results.forEach(result => {\r\n        if (item === result.id) {\r\n          console.log(\"result:\", result);\r\n          api\r\n            .createPosts({\r\n              author: result.author,\r\n              content: result.content,\r\n              created_at: result.created_at\r\n            })\r\n            .then(response => {\r\n              console.log(\"response:\", response);\r\n              this.confirmDeleteOneItem(result.id);\r\n              this.getData();\r\n            })\r\n            .catch(error => {\r\n              console.log(\"error:\", error);\r\n            });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ selectedRowKeys: [] });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  render() {\r\n    const { results, selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    return (\r\n      <>\r\n        <div style={{ marginBottom: 16 }}>\r\n          <Popconfirm\r\n            title={`${selectedRowKeys}번 항목을 정말로 추가하시겠습니까?`}\r\n            onConfirm={this.confirmAddMultipleItems.bind(this, selectedRowKeys)}\r\n            okText=\"예\"\r\n            cancelText=\"아니오\"\r\n            placement=\"topRight\"\r\n          >\r\n            <Button type=\"primary\" disabled={!hasSelected}>\r\n              추가\r\n            </Button>{\" \"}\r\n          </Popconfirm>\r\n          <Divider type=\"vertical\" />\r\n          <Popconfirm\r\n            title={`${selectedRowKeys.length}개의 아이템을 정말로 삭제하시겠습니까?`}\r\n            onConfirm={this.confirmDeleteMultipleItems.bind(\r\n              this,\r\n              selectedRowKeys\r\n            )}\r\n            okText=\"예\"\r\n            cancelText=\"아니오\"\r\n            placement=\"topLeft\"\r\n          >\r\n            <Button type=\"danger\" disabled={!hasSelected}>\r\n              삭제\r\n            </Button>\r\n          </Popconfirm>\r\n          <span style={{ marginLeft: 15 }}>\r\n            {hasSelected ? `${selectedRowKeys.length} 개 선택` : \"\"}\r\n          </span>\r\n        </div>\r\n        <Table\r\n          dataSource={results}\r\n          rowSelection={rowSelection}\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n        >\r\n          <Column title=\"Id\" dataIndex=\"id\" key=\"id\" />\r\n          <Column title=\"Author\" dataIndex=\"author\" key=\"author\" />\r\n          <Column title=\"Content\" dataIndex=\"content\" key=\"content\" />\r\n\r\n          <Column\r\n            title=\"Action\"\r\n            key=\"action\"\r\n            render={(text, record, index) => (\r\n              <div>\r\n                <Popconfirm\r\n                  title={`${record.id}번 항목을 정말로 추가하시겠습니까?`}\r\n                  onConfirm={this.confirmAddOneItem.bind(this, record)}\r\n                  okText=\"예\"\r\n                  cancelText=\"아니오\"\r\n                  placement=\"topRight\"\r\n                >\r\n                  <Button type=\"default\">추가</Button>\r\n                </Popconfirm>\r\n                <Divider type=\"vertical\" style={{ visibility: \"hidden\" }} />\r\n                <Popconfirm\r\n                  title={`${record.id}번 항목을 정말로 삭제하시겠습니까?`}\r\n                  onConfirm={this.confirmDeleteOneItem.bind(this, record.id)}\r\n                  okText=\"예\"\r\n                  cancelText=\"아니오\"\r\n                  placement=\"topRight\"\r\n                >\r\n                  <Button type=\"danger\">삭제</Button>\r\n                </Popconfirm>\r\n              </div>\r\n            )}\r\n          />\r\n        </Table>{\" \"}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Icon } from \"antd\";\r\n\r\nimport \"../css/sideNav.css\";\r\n\r\nconst MenuLink = styled(Link)`\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  color: white;\r\n  padding: 0.8em;\r\n`;\r\n\r\nconst MenuAnchor = styled.a`\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  color: white;\r\n  padding: 0.8em;\r\n`;\r\n\r\nexport default class SideNav extends Component {\r\n  state = {\r\n    isOpenMenu: false\r\n  };\r\n\r\n  closeMenu = () => {\r\n    this.setState({ isOpenMenu: false });\r\n  };\r\n\r\n  handleStateChange(state) {\r\n    this.setState({ isOpenMenu: state.isOpen });\r\n  }\r\n\r\n  showSettings(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Menu\r\n          isOpen={this.state.isOpenMenu}\r\n          onStateChange={state => {\r\n            this.handleStateChange(state);\r\n          }}\r\n        >\r\n          <MenuLink\r\n            onClick={() => this.closeMenu()}\r\n            to=\"/\"\r\n            id=\"home\"\r\n            className=\"menu-item\"\r\n          >\r\n            <Icon type=\"home\" />\r\n            <span> 홈</span>\r\n          </MenuLink>\r\n          <MenuLink\r\n            onClick={() => this.closeMenu()}\r\n            to=\"/drafts\"\r\n            id=\"suggest\"\r\n            className=\"menu-item\"\r\n          >\r\n            <Icon type=\"edit\" />\r\n            <span> 제안하기</span>\r\n          </MenuLink>\r\n          <MenuLink\r\n            onClick={() => this.closeMenu()}\r\n            to=\"/search\"\r\n            id=\"search\"\r\n            className=\"menu-item\"\r\n          >\r\n            <Icon type=\"search\" />\r\n            <span> 검색하기</span>\r\n          </MenuLink>\r\n          <MenuAnchor\r\n            href=\"https://github.com/CaesiumY/good-idea-cards\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            id=\"contact\"\r\n            className=\"menu-item\"\r\n          >\r\n            <Icon type=\"github\" />\r\n            <span> 깃허브</span>\r\n          </MenuAnchor>\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport AppLayout from \"./container/AppLayout\";\r\nimport Home from \"./routes/Home\";\r\nimport Draft from \"./routes/Draft\";\r\nimport Search from \"./routes/Search\";\r\nimport Admin from \"./routes/Admin\";\r\nimport SideNav from \"./components/SideNav\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url(\"https://fonts.googleapis.com/css?family=Noto+Sans+KR:400,900&display=swap&subset=korean\");\r\n  @import url(\"https://fonts.googleapis.com/css?family=Noto+Serif+KR:400,700&display=swap&subset=korean\");\r\n\r\n`;\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <GlobalStyle />\r\n        <Layout style={{ minHeight: \"100vh\" }}>\r\n          <HashRouter>\r\n            <SideNav></SideNav>\r\n            <AppLayout>\r\n              <Route path=\"/\" exact={true} component={Home}></Route>\r\n              <Route path=\"/drafts/\" exact={true} component={Draft}></Route>\r\n              <Route path=\"/search/\" exact={true} component={Search}></Route>\r\n              <Route path=\"/admin/\" exact={true} component={Admin}></Route>\r\n            </AppLayout>\r\n          </HashRouter>\r\n        </Layout>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}